{"version":3,"sources":["Profile.js","Search.js","Github.js","NotLoggedIn.js","Components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Github","userdata","this","props","userData","followers","homeURL","following","repos","message","className","href","homeUrl","target","rel","title","name","username","alt","src","avatar","location","Component","Search","event","preventDefault","value","refs","searchProfile","onSubmit","submitForm","bind","type","ref","placeholder","state","notFound","finalURL","fetch","then","res","json","data","setState","login","avatar_url","public_repos","html_url","catch","error","console","log","getProfile","id","Profile","NotLoggedIn","Header","onLogin","onLogout","page","idToken","Nav","Link","onClick","Navbar","style","backgroundColor","expand","Brand","Toggle","aria-controls","Collapse","position","left","App","profile","lock","Auth0Lock","clientID","domain","on","authResult","accessToken","setProfile","localStorage","setItem","JSON","stringify","getItem","parse","show","removeItem","gitty","logout","showLock","defaultProps","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e43d24b2.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Github extends Component{\r\n    render(){\r\n    let userdata = this.props.userData;\r\n    let followers = `${userdata.homeURL}/followers`;\r\n    let following = `${userdata.homeURL}/following`;\r\n    let repos = `${userdata.homeURL}/repositories`;\r\n\r\n    if(userdata.message === \"Not Found\"){\r\n      return(\r\n        <div className=\"notfound\">\r\n          <h2>Heyyyyy</h2>\r\n          <p>Are you sure, for whom you are looking for ???</p>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return(\r\n        <section className=\"github-profile\">\r\n          <div className=\"github-profile-info\">\r\n            <a href={userdata.homeUrl} target=\"_blank\" rel=\"noopener noreferrer\" title={userdata.name || userdata.username}><img alt=\"Not found\" src={userdata.avatar} /></a>\r\n            <h2><a href={userdata.homeUrl} title={userdata.username} target=\"_blank\" rel=\"noopener noreferrer\">{userdata.name || userdata.username}</a></h2>\r\n            <h3>{userdata.location}</h3>\r\n          </div>\r\n          <div className=\"github-profile-state\">\r\n            <ul>\r\n               <li>\r\n                  <a href={followers} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Number Of Followers\"><i>{userdata.followers}</i><span>Followers</span></a>\r\n               </li>\r\n               <li>\r\n                  <a href={repos} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Number Of Repositories\"><i>{userdata.repos}</i><span>Repositories</span></a>\r\n               </li>\r\n               <li>\r\n                  <a href={following} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Number Of Following\"><i>{userdata.following}</i><span>Following</span></a>\r\n               </li>\r\n            </ul>\r\n          </div>\r\n        </section>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default Github;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass Search extends Component {\r\n\r\n  submitForm(event){\r\n    event.preventDefault();\r\n    let value = this.refs.username.value;\r\n    this.props.searchProfile(value);\r\n    this.refs.username.value = '';\r\n  }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"search-box\">\r\n        <form onSubmit={this.submitForm.bind(this)}>\r\n          <label><input type=\"search\" ref=\"username\" placeholder=\"Type Github Username then Press Enter\"/></label>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;","import React, {Component} from 'react';\r\nimport Profile from './Profile';\r\nimport Search from './Search';\r\n\r\nconst API = 'https://api.github.com/users'\r\n\r\nclass Github extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username: 'ayush-020198',\r\n            name: '',\r\n            avatar: '',\r\n            repos: '',\r\n            followers: '',\r\n            following: '',\r\n            homeURL: '',\r\n            notFound: ''\r\n        }\r\n    }\r\n\r\n    getProfile(username){\r\n        let finalURL = `${API}/${username}`;\r\n\r\n        fetch(finalURL)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                username: data.login,\r\n                name: data.name,\r\n                avatar: data.avatar_url,\r\n                repos: data.public_repos,\r\n                followers: data.followers,\r\n                following: data.following,\r\n                homeURL: data.html_url,\r\n                notFound: data.message\r\n            })\r\n        })\r\n        .catch((error) => console.log('Unable to fetch data'))\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getProfile(this.state.username);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div>\r\n            <section id=\"card\">\r\n                <Search searchProfile={this.getProfile.bind(this)}/>\r\n                <Profile userData={this.state}/>\r\n            </section>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Github;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass NotLoggedIn extends Component {\r\n  render(){\r\n    return(\r\n      <div className=\"search-box\">\r\n        <h1 className=\"notloggedin\">LogIn First :)</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotLoggedIn;","import React, {Component} from 'react';\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\nclass Header extends Component{\r\n\r\n    onLogin(){\r\n        this.props.onLogin();\r\n    }\r\n\r\n    onLogout(){\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render(){\r\n\r\n        let page;\r\n        if(this.props.idToken){\r\n            page = <Nav.Link onClick={this.onLogout.bind(this)} href=\"#home\">Logout</Nav.Link>\r\n        }\r\n        else {\r\n            page = <Nav.Link onClick={this.onLogin.bind(this)} href=\"#home\">Login</Nav.Link>\r\n        }\r\n\r\n        return( <Navbar style={{backgroundColor: '#eedad1'}} expand=\"lg\">\r\n        <Navbar.Brand href=\"https://ayush-020198.github.io/Portfolio/\">Github</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\" style={{position: 'relative', left: '1700px'}}>\r\n              {page}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>)\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Github from './Github';\nimport NotLoggedIn from './NotLoggedIn';\nimport Header from './Components/Header';\nimport Auth0Lock from 'auth0-lock';\nimport './bg.sass';\n\nclass App extends Component{\n\n  constructor(props){\n    super(props)\n    this.state = {\n        idToken: '',\n        profile: {}\n    }\n}\n\nstatic defaultProps = {\n  clientID: '25QDthANPH4LAO5qZgXgPG673h2c9nLb',\n  domain: 'dev-mpt3d40z.us.auth0.com'\n}\n\ncomponentDidMount(){\n    this.lock = new Auth0Lock(this.props.clientID, this.props.domain);\n\n    this.lock.on('authenticated', (authResult) => {\n        this.lock.getProfile(authResult.accessToken, (error, profile) =>{\n          if(error)\n          {\n            console.log(error);\n            return;\n          }\n          this.setProfile(authResult.accessToken, profile);\n        })\n    });\n\n    this.getProfile();\n}\n\nsetProfile(idToken, profile){\n  localStorage.setItem('idToken', idToken);\n  localStorage.setItem('profile', JSON.stringify(profile));\n\n  this.setState({\n    idToken: localStorage.getItem('idToken'),\n    profile: JSON.parse(localStorage.getItem('profile'))\n  })\n}\n\ngetProfile(){\n  if(localStorage.getItem('idToken') != null){\n    this.setState({\n      idToken: localStorage.getItem('idToken'),\n      profile: JSON.parse(localStorage.getItem('profile'))\n    }, () => {\n    console.log(this.state);\n    })\n  }\n}\n\nshowLock() {\n  this.lock.show();\n}\n\nlogout(){\n  this.setState({\n    idToken: '',\n        profile: {}\n  }, ()=>{\n    localStorage.removeItem('idToken');\n    localStorage.removeItem('profile')\n  })\n}\n\nrender(){\n\n  let gitty;\n  if(this.state.idToken){\n    gitty = <Github />;\n  }\n  else{\n    gitty = <NotLoggedIn />;\n  }\n\n  return (\n    <div className=\"App\">\n       <div className=\"lines\">\n       <div className=\"line\"></div>\n       <div className=\"line\"></div>\n       <div className=\"line\"></div>\n    </div>\n     <Header \n     idToken={this.state.idToken}\n     profile={this.state.profile}\n     lock={this.lock}\n     onLogout={this.logout.bind(this)}\n     onLogin={this.showLock.bind(this)}\n     />\n     {gitty}\n    </div>\n  );\n}\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}